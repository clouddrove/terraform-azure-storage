

---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#


# Name of this project
name: Terraform AZURE STORAGE

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-azure-storage

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v1.0.0-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

#  description of this project
description: |-
  Terraform module to create storage resource on AZURE.
# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  ### Simple Example
  Here is an example of how you can use this module in your inventory structure:
  #### default storage
  ```hcl
    module "storage" {
      depends_on                = [module.resource_group]
      source                    = "clouddrove/storage/azure"
      name                      = "app"
      environment               = "test"
      label_order               = ["name", "environment"]
      resource_group_name       = module.resource_group.resource_group_name
      location                  = module.resource_group.resource_group_location
      storage_account_name      = "storagestartac"
      account_kind              = "StorageV2"
      account_tier              = "Standard"
      account_replication_type  = "GRS"
      enable_https_traffic_only = true
      is_hns_enabled            = true
      sftp_enabled              = true

      network_rules = [
        {
            default_action = "Deny"
            ip_rules       = ["0.0.0.0/0"]
            bypass         = ["AzureServices"]
        }
      ]


      ##   Storage Account Threat Protection
      enable_advanced_threat_protection = true

      ##   Storage Container
      containers_list = [
        { name = "app-test", access_type = "private" },
      ]

      ##   Storage File Share
      file_shares = [
        { name = "fileshare1", quota = 5 },
      ]

      ##   Storage Tables
      tables = ["table1"]

      ## Storage Queues
      queues = ["queue1"]

      management_policy = [
        {
          prefix_match               = ["app-test/folder_path"]
          tier_to_cool_after_days    = 0
          tier_to_archive_after_days = 50
          delete_after_days          = 100
          snapshot_delete_after_days = 30
        }
      ]
  }
    ```
  ####  storage with cmk encryption
  ```hcl
    module "storage" {
      depends_on                = [module.resource_group]
      source                    = "clouddrove/storage/azure"
      name                      = "app"
      environment               = "test"
      label_order               = ["name", "environment"]
      resource_group_name       = module.resource_group.resource_group_name
      location                  = module.resource_group.resource_group_location
      storage_account_name      = "storagkistaptac"
      account_kind              = "BlockBlobStorage"
      account_tier              = "Premium"
      identity_type             = "UserAssigned"
      object_id                 = ["7XXXXXXXXXXXXXXXX166d7c97", "c2f1eXXXXXXXXXXXXXXXX470c43"]
      account_replication_type  = "ZRS"
      enable_https_traffic_only = true
      is_hns_enabled            = true
      sftp_enabled              = true
      #### when CMK encryption enable required key-vault id
      ###customer_managed_key can only be set when the account_kind is set to StorageV2 or account_tier set to Premium, and the identity type is UserAssigned.
      cmk_encryption_enabled = true
      key_vault_id           = module.vault.id
      ###This can only be true when account_kind is StorageV2 or when account_tier is Premium and account_kind is one of BlockBlobStorage or FileStorage.
      infrastructure_encryption_enabled = true

      network_rules = [
        {
          default_action = "Deny"
          ip_rules       = ["0.0.0.0/0"]
          bypass         = ["AzureServices"]
        }
      ]


      ##   Storage Account Threat Protection
      enable_advanced_threat_protection = true

      ##   Storage Container
      containers_list = [
        { name = "app-test", access_type = "private" },
      ]

      management_policy = [
        {
          prefix_match               = ["app-test/folder_path"]
          tier_to_cool_after_days    = 0
          tier_to_archive_after_days = 50
          delete_after_days          = 100
          snapshot_delete_after_days = 30
        }
      ]
    }
    ```
